@page "/{*pageRoute}"
@inject ISnackbar Snackbar
@inject DialogService DialogService

@if (pageModel != null)
{
    <PageBuilder Model="@pageModel"></PageBuilder>
}

@code{
    [Parameter]
    public string PageRoute { get; set; }

    private bool loaded = false;

    private PageResource pageModel;

    protected override void OnParametersSet()
    {
        pageModel = null;
        if (PageRoute != null)
        {
            pageModel = AppConfig.PageBuilder.GetPage(PageRoute);
            if (pageModel != null){
                pageModel.EntityContext = AppConfig.GetEntityContext("testuser");
                pageModel.UI.__Notification__= NotifyEvent;
                pageModel.UI.__Alert__ = Alert;
                pageModel.UI.__Confirm__ = Confirm;
                pageModel.UI.__Dialog__ = OpenDialog;
                pageModel.UI.__Slider__ = SlideDialog;
            }

            loaded = true;
        }
    }

    private void NotifyEvent(PageNotificationSeverity severity, string detail, int duration = 4000)
    {
        Snackbar.Add(detail, (Severity)severity);
    }

    private async Task Alert(string message, string title = null, string buttonText = "Ok")
    {
        await DialogService.ShowMessageBox(message, title, buttonText);
    }

    private async Task<bool> Confirm(string message, string title = null, string buttonText = "Ok", string cancelButtonText = "Cancel")
    {
        var result = await DialogService.ShowMessageBox(message, title, buttonText, cancelText: cancelButtonText);

        return result.Value;
    }

    public async Task<dynamic> OpenDialog(BaseResource resource, string title, PageDialogOption options)
    {
        // return await DialogService.Show<PageDialog>(title,
        //        new Dictionary<string, object>() { { "Resource", resource }, { "Options", options } },
        //        new DialogOptions() { MaxWidth = MaxWidth.Medium });

        return null;
    }

    public async Task<dynamic> SlideDialog(BaseResource resource, string title, PageSliderOption options)
    {
        // return await DialogService.Show<PageSlider>(title, new Dictionary<string, object>() { { "Resource", resource }, { "Options", options } },
        //         options: new SideDialogOptions { Width = options.Width, Position = (DialogPosition)options.Position });

        return null;
    }
}
